<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>apple</title>
  
  <subtitle>每天进步一点点，专注于后端技术的学习，总结！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://duanlsh.xyz/"/>
  <updated>2018-07-20T15:12:36.000Z</updated>
  <id>http://duanlsh.xyz/</id>
  
  <author>
    <name>apple</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>logback-mdc</title>
    <link href="http://duanlsh.xyz/2018/07/20/logback-mdc/"/>
    <id>http://duanlsh.xyz/2018/07/20/logback-mdc/</id>
    <published>2018-07-20T15:05:21.000Z</published>
    <updated>2018-07-20T15:12:36.000Z</updated>
    
    <content type="html"><![CDATA[<excerpt in="" index="" |="" 首页摘要=""><blockquote><p>logback中MDC的用法分析  </p></blockquote> <a id="more"></a><the rest="" of="" contents="" |="" 余下全文=""><h3 id="当前使用的版本"><a href="#当前使用的版本" class="headerlink" title="当前使用的版本"></a>当前使用的版本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">logback-classic:1.2.3</span><br><span class="line">logback-core:1.2.3</span><br><span class="line">slf4j-api:1.7.25</span><br></pre></td></tr></table></figure><h3 id="jar包介绍"><a href="#jar包介绍" class="headerlink" title="jar包介绍"></a>jar包介绍</h3><blockquote><p>logback-core 是logback的核心jar包信息<br>logback-classic 是logback的扩展包信息包括Filter等<br>slf4j-api 日志门面，是日志的通用接口信息 详情请自行百度</p></blockquote><h3 id="操作部分"><a href="#操作部分" class="headerlink" title="操作部分"></a>操作部分</h3><h4 id="pom-xml-引用"><a href="#pom-xml-引用" class="headerlink" title="pom.xml 引用"></a>pom.xml 引用</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">   &lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;logback-classic&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;1.2.3&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h4 id="MDC-用法解释"><a href="#MDC-用法解释" class="headerlink" title="MDC 用法解释"></a>MDC 用法解释</h4><blockquote><p>MDC 储存内容 只能从放入的线程中获取对应的值；类似ThreadLocal<br>MDC 内容在xml中的获取方式为 %X{key},logback可以使用默认值 -:value 默认值<br>MDC 每次存入值以后 请求完毕建议清空内容信息，防止脏数据<br>MDC 如果在子线程中获取其他线程的MDC信息 可以通过<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Map&lt;String, String&gt; mdcValue = MDC.getCopyOfContextMap(); 线程1</span><br><span class="line">MDC.setContextMap(mdcValue); 线程2</span><br></pre></td></tr></table></figure></p></blockquote><h4 id="MDC-Demo"><a href="#MDC-Demo" class="headerlink" title="MDC Demo"></a>MDC Demo</h4><h5 id="xml配置信息"><a href="#xml配置信息" class="headerlink" title="xml配置信息"></a>xml配置信息</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">   &lt;encoder&gt;</span><br><span class="line">&lt;pattern&gt;</span><br><span class="line">%X&#123;first:-test&#125; - %msg %n</span><br><span class="line">&lt;/pattern&gt;</span><br><span class="line">&lt;/encoder&gt;</span><br></pre></td></tr></table></figure><h5 id="java代码"><a href="#java代码" class="headerlink" title="java代码"></a>java代码</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">   </span><br><span class="line">   logger.info(<span class="string">"info run ClassUtils"</span>);</span><br><span class="line">   <span class="comment">//打印信息为</span></span><br><span class="line">   <span class="comment">//test - info run ClassUtils</span></span><br><span class="line">   </span><br><span class="line">   MDC.put(<span class="string">"first"</span>, <span class="string">"mdc_duanlsh"</span>);</span><br><span class="line">   logger.info(<span class="string">"info run ClassUtils"</span>);</span><br><span class="line">   <span class="comment">//打印内容为：</span></span><br><span class="line">   <span class="comment">//mdc_duanlsh - info run ClassUtils</span></span><br><span class="line">   </span><br><span class="line">   <span class="comment">//如果在主线程中开启线程的使用方式为：</span></span><br><span class="line">   <span class="comment">//这样会在子线程中获取主线程中 MDC 存入的信息</span></span><br><span class="line">   MDC.put(<span class="string">"first"</span>, <span class="string">"mdc_duanlsh"</span>);</span><br><span class="line">   Map&lt;String, String&gt; mm = MDC.getCopyOfContextMap();</span><br><span class="line">   <span class="keyword">new</span> Thread(() -&gt; &#123;</span><br><span class="line">MDC.setContextMap(mm);</span><br><span class="line">logger.info(<span class="string">"info run ClassUtils Thread2"</span>);</span><br><span class="line">&#125;).start();</span><br></pre></td></tr></table></figure><h6 id="项目实战-参考：点我"><a href="#项目实战-参考：点我" class="headerlink" title="项目实战 参考：点我"></a>项目实战 参考：<a href="https://logback.qos.ch/xref/ch/qos/logback/classic/helpers/MDCInsertingServletFilter.html" target="_blank" rel="noopener">点我</a></h6><ul><li>项目实战 缩减版<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//当前为存入 username 和remove username的方式</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServletFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> String USER_KEY = <span class="string">"username"</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest request, ServletResponse response,</span></span></span><br><span class="line"><span class="function"><span class="params">    FilterChain chain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">boolean</span> successfulRegistration = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">    HttpServletRequest req = (HttpServletRequest) request;    </span><br><span class="line">    Principal principal = req.getUserPrincipal(); <span class="comment">//可以理解为获取用户信息</span></span><br><span class="line">    <span class="keyword">if</span> (principal != <span class="keyword">null</span>) &#123;</span><br><span class="line">      String username = principal.getName();</span><br><span class="line">      successfulRegistration = registerUsername(username);</span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      chain.doFilter(request, response);</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (successfulRegistration) &#123;</span><br><span class="line">        MDC.remove(USER_KEY);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">registerUsername</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (username != <span class="keyword">null</span> &amp;&amp; username.trim().length() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      MDC.put(USER_KEY, username);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p><em>当前参考的是</em><br><a href="https://logback.qos.ch/manual/mdc.html" target="_blank" rel="noopener">https://logback.qos.ch/manual/mdc.html</a></p></the></excerpt>]]></content>
    
    <summary type="html">
    
      &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;

&lt;blockquote&gt;
&lt;p&gt;logback中MDC的用法分析  &lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="logger" scheme="http://duanlsh.xyz/categories/logger/"/>
    
    
      <category term="logger" scheme="http://duanlsh.xyz/tags/logger/"/>
    
  </entry>
  
  <entry>
    <title>logback</title>
    <link href="http://duanlsh.xyz/2018/07/18/logback/"/>
    <id>http://duanlsh.xyz/2018/07/18/logback/</id>
    <published>2018-07-17T16:23:05.000Z</published>
    <updated>2018-07-20T15:13:06.000Z</updated>
    
    <content type="html"><![CDATA[<excerpt in="" index="" |="" 首页摘要=""><blockquote><p>logback.xml 通用的配置文件信息<br>生成文件 文件最大500M 一般超过500M 最多30个文件，超过30个文件会自动删除，总共大小为30GB，超过30GB则删除历史文件<br>debug 模式</p></blockquote><ul><li><a id="more"></a></li></ul><the rest="" of="" contents="" |="" 余下全文=""><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span><br><span class="line"><span class="comment">&lt;!--开始日志debug模式 也可以定义动态监测配置文件 使用scan--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span> <span class="attr">debug</span>=<span class="string">"true"</span> &gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--生成文件 文件最大500M 一般超过500M 最多30个文件，超过30个文件会自动删除，总共大小为30GB，超过30GB则删除历史文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"FILE"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.RollingFileAppender"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">append</span>&gt;</span>true<span class="tag">&lt;/<span class="name">append</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">file</span>&gt;</span>logFile.log<span class="tag">&lt;/<span class="name">file</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">immediateFlush</span>&gt;</span>true<span class="tag">&lt;/<span class="name">immediateFlush</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">rollingPolicy</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">fileNamePattern</span>&gt;</span>logFile.%d&#123;yyyy-MM-dd&#125;.%i.log<span class="tag">&lt;/<span class="name">fileNamePattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">maxFileSize</span>&gt;</span>500mb<span class="tag">&lt;/<span class="name">maxFileSize</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">maxHistory</span>&gt;</span>30<span class="tag">&lt;/<span class="name">maxHistory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">totalSizeCap</span>&gt;</span>30GB<span class="tag">&lt;/<span class="name">totalSizeCap</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">rollingPolicy</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--显示的是 日期 线程名 日志级别 日志信息 写的日志内容 换行--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%d&#123;HH:mm:ss.SSS&#125; [%thread] %level %logger - %msg%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"STDOUT"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.ConsoleAppender"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%%d&#123;HH:mm:ss.SSS&#125; [%thread] %-5level %logger - %msg%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--日志级别为 info 以及以上的级别--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">"info"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"STDOUT"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"FILE"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></the></excerpt>]]></content>
    
    <summary type="html">
    
      &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;

&lt;blockquote&gt;
&lt;p&gt;logback.xml 通用的配置文件信息&lt;br&gt;生成文件 文件最大500M 一般超过500M 最多30个文件，超过30个文件会自动删除，总共大小为30GB，超过30GB则删除历史文件&lt;br&gt;debug 模式&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
    
    </summary>
    
      <category term="logback" scheme="http://duanlsh.xyz/categories/logback/"/>
    
    
      <category term="logger" scheme="http://duanlsh.xyz/tags/logger/"/>
    
  </entry>
  
  <entry>
    <title>hexoduan</title>
    <link href="http://duanlsh.xyz/2017/12/07/hexoduan/"/>
    <id>http://duanlsh.xyz/2017/12/07/hexoduan/</id>
    <published>2017-12-06T16:51:11.000Z</published>
    <updated>2017-12-10T06:04:12.000Z</updated>
    
    <content type="html"><![CDATA[<excerpt in="" index="" |="" 首页摘要=""><p>asdfasdfasdfasdf<br><a id="more"></a></p><the rest="" of="" contents="" |="" 余下全文=""><h1 id="您好"><a href="#您好" class="headerlink" title="您好"></a>您好</h1><h1 id="test"><a href="#test" class="headerlink" title="test"></a>test</h1><h2 id="test1"><a href="#test1" class="headerlink" title="test1"></a>test1</h2><h2 id="test1-1"><a href="#test1-1" class="headerlink" title="test1"></a>test1</h2><h2 id="test1-2"><a href="#test1-2" class="headerlink" title="test1"></a>test1</h2><h2 id="test1-3"><a href="#test1-3" class="headerlink" title="test1"></a>test1</h2><h2 id="test1-4"><a href="#test1-4" class="headerlink" title="test1"></a>test1</h2><h2 id="test1-5"><a href="#test1-5" class="headerlink" title="test1"></a>test1</h2></the></excerpt>]]></content>
    
    <summary type="html">
    
      &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;

&lt;p&gt;asdfasdfasdfasdf&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
